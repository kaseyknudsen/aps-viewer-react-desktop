{"ast":null,"code":"var _jsxFileName = \"/Users/kaseyknudsen/Desktop/APS/aps-viewer-react-desktop/aps-viewer-react/src/components/Viewer.jsx\",\n  _s = $RefreshSig$();\n/// import * as Autodesk from \"@types/forge-viewer\";\n\nimport { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Autodesk\n} = window;\nconst runtime = {\n  options: null,\n  ready: null\n};\nfunction initializeViewerRuntime(options) {\n  if (!runtime.ready) {\n    runtime.options = {\n      ...options\n    };\n    runtime.ready = new Promise(resolve => Autodesk.Viewing.Initializer(runtime.options, resolve));\n  } else {\n    if (['accessToken', 'getAccessToken', 'env', 'api', 'language'].some(prop => options[prop] !== runtime.options[prop])) {\n      return Promise.reject('Cannot initialize another viewer runtime with different settings.');\n    }\n  }\n  return runtime.ready;\n}\nconst Viewer = _ref => {\n  _s();\n  let {\n    runtime: initialRuntimeOptions,\n    urn,\n    selectedIds,\n    onCameraChange,\n    onSelectionChange\n  } = _ref;\n  const containerRef = useRef(null);\n  const [viewer, setViewer] = useState(null);\n  useEffect(() => {\n    initializeViewerRuntime(initialRuntimeOptions || {}).then(() => {\n      const viewer3D = new Autodesk.Viewing.GuiViewer3D(containerRef.current);\n      viewer3D.start();\n      viewer3D.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, handleViewerCameraChange);\n      viewer3D.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, handleViewerSelectionChange);\n      setViewer(viewer3D);\n      updateViewerState(viewer3D, {});\n    }).catch(err => console.error(err));\n    return () => {\n      if (viewer) {\n        viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, handleViewerCameraChange);\n        viewer.removeEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, handleViewerSelectionChange);\n        viewer.finish();\n      }\n    };\n  }, [initialRuntimeOptions]);\n  useEffect(() => {\n    if (viewer) {\n      updateViewerState(viewer);\n    }\n  }, [urn, selectedIds]);\n  const handleViewerCameraChange = () => {\n    if (onCameraChange) {\n      onCameraChange({\n        viewer,\n        camera: viewer.getCamera()\n      });\n    }\n  };\n  const handleViewerSelectionChange = () => {\n    if (onSelectionChange) {\n      onSelectionChange({\n        viewer,\n        ids: viewer.getSelection()\n      });\n    }\n  };\n  const updateViewerState = function (viewer3D) {\n    let prevProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (urn && urn !== prevProps.urn) {\n      Autodesk.Viewing.Document.load('urn:' + urn, doc => viewer3D.loadDocumentNode(doc, doc.getRoot().getDefaultGeometry()), (code, message, errors) => console.error(code, message, errors));\n    } else if (!urn && viewer3D.model) {\n      viewer3D.unloadModel(viewer3D.model);\n    }\n    const selectedIdsStringified = JSON.stringify(selectedIds || []);\n    const prevSelectedIdsStringified = JSON.stringify(prevProps.selectedIds || []);\n    if (selectedIdsStringified !== prevSelectedIdsStringified) {\n      viewer3D.select(selectedIds);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 10\n  }, this);\n};\n_s(Viewer, \"yLuPaUU6pCSUSjT4+wyTH/JdVi0=\");\n_c = Viewer;\nViewer.propTypes = {\n  runtime: PropTypes.object,\n  urn: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.number),\n  onCameraChange: PropTypes.func,\n  onSelectionChange: PropTypes.func\n};\nexport default Viewer;\nvar _c;\n$RefreshReg$(_c, \"Viewer\");","map":{"version":3,"names":["useEffect","useState","useRef","PropTypes","Autodesk","window","runtime","options","ready","initializeViewerRuntime","Promise","resolve","Viewing","Initializer","some","prop","reject","Viewer","initialRuntimeOptions","urn","selectedIds","onCameraChange","onSelectionChange","containerRef","viewer","setViewer","then","viewer3D","GuiViewer3D","current","start","addEventListener","CAMERA_CHANGE_EVENT","handleViewerCameraChange","SELECTION_CHANGED_EVENT","handleViewerSelectionChange","updateViewerState","catch","err","console","error","removeEventListener","finish","camera","getCamera","ids","getSelection","prevProps","Document","load","doc","loadDocumentNode","getRoot","getDefaultGeometry","code","message","errors","model","unloadModel","selectedIdsStringified","JSON","stringify","prevSelectedIdsStringified","select","propTypes","object","string","arrayOf","number","func"],"sources":["/Users/kaseyknudsen/Desktop/APS/aps-viewer-react-desktop/aps-viewer-react/src/components/Viewer.jsx"],"sourcesContent":["/// import * as Autodesk from \"@types/forge-viewer\";\n\nimport { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nconst { Autodesk } = window;\n\nconst runtime = {\n  options: null,\n  ready: null,\n};\n\nfunction initializeViewerRuntime(options) {\n  if (!runtime.ready) {\n    runtime.options = { ...options };\n    runtime.ready = new Promise((resolve) => Autodesk.Viewing.Initializer(runtime.options, resolve));\n  } else {\n    if (['accessToken', 'getAccessToken', 'env', 'api', 'language'].some((prop) => options[prop] !== runtime.options[prop])) {\n      return Promise.reject('Cannot initialize another viewer runtime with different settings.');\n    }\n  }\n  return runtime.ready;\n}\n\nconst Viewer = ({ runtime: initialRuntimeOptions, urn, selectedIds, onCameraChange, onSelectionChange }) => {\n  const containerRef = useRef(null);\n  const [viewer, setViewer] = useState(null);\n\n  useEffect(() => {\n    initializeViewerRuntime(initialRuntimeOptions || {})\n      .then(() => {\n        const viewer3D = new Autodesk.Viewing.GuiViewer3D(containerRef.current);\n        viewer3D.start();\n        viewer3D.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, handleViewerCameraChange);\n        viewer3D.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, handleViewerSelectionChange);\n        setViewer(viewer3D);\n        updateViewerState(viewer3D, {});\n      })\n      .catch((err) => console.error(err));\n\n    return () => {\n      if (viewer) {\n        viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, handleViewerCameraChange);\n        viewer.removeEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, handleViewerSelectionChange);\n        viewer.finish();\n      }\n    };\n  }, [initialRuntimeOptions]);\n\n  useEffect(() => {\n    if (viewer) {\n      updateViewerState(viewer);\n    }\n  }, [urn, selectedIds]);\n\n  const handleViewerCameraChange = () => {\n    if (onCameraChange) {\n      onCameraChange({ viewer, camera: viewer.getCamera() });\n    }\n  };\n\n  const handleViewerSelectionChange = () => {\n    if (onSelectionChange) {\n      onSelectionChange({ viewer, ids: viewer.getSelection() });\n    }\n  };\n\n  const updateViewerState = (viewer3D, prevProps = {}) => {\n    if (urn && urn !== prevProps.urn) {\n      Autodesk.Viewing.Document.load(\n        'urn:' + urn,\n        (doc) => viewer3D.loadDocumentNode(doc, doc.getRoot().getDefaultGeometry()),\n        (code, message, errors) => console.error(code, message, errors)\n      );\n    } else if (!urn && viewer3D.model) {\n      viewer3D.unloadModel(viewer3D.model);\n    }\n\n    const selectedIdsStringified = JSON.stringify(selectedIds || []);\n    const prevSelectedIdsStringified = JSON.stringify(prevProps.selectedIds || []);\n    if (selectedIdsStringified !== prevSelectedIdsStringified) {\n      viewer3D.select(selectedIds);\n    }\n  };\n\n  return <div ref={containerRef}></div>;\n};\n\nViewer.propTypes = {\n  runtime: PropTypes.object,\n  urn: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.number),\n  onCameraChange: PropTypes.func,\n  onSelectionChange: PropTypes.func,\n};\n\nexport default Viewer;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}