{"ast":null,"code":"var _jsxFileName = \"/Users/kaseyknudsen/Desktop/APS/aps-viewer-react-desktop/aps-viewer-react/src/components/Viewer.jsx\",\n  _s = $RefreshSig$();\n/// import * as Autodesk from \"@types/forge-viewer\";\n\nimport React, { useEffect, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Autodesk\n} = window;\nconst runtime = {\n  options: null,\n  ready: null\n};\nfunction initializeViewerRuntime(options) {\n  if (!runtime.ready) {\n    runtime.options = {\n      ...options\n    };\n    runtime.ready = new Promise(resolve => Autodesk.Viewing.Initializer(runtime.options, resolve));\n  } else {\n    if (['accessToken', 'getAccessToken', 'env', 'api', 'language'].some(prop => options[prop] !== runtime.options[prop])) {\n      return Promise.reject('Cannot initialize another viewer runtime with different settings.');\n    }\n  }\n  return runtime.ready;\n}\nconst Viewer = props => {\n  _s();\n  const containerRef = useRef(null);\n  const viewerRef = useRef(null);\n\n  // Memoize the viewer instance to prevent unnecessary re-creation\n  const memoizedViewer = useMemo(() => viewerRef.current, [viewerRef.current]);\n  useEffect(() => {\n    initializeViewerRuntime(props.runtime || {}).then(() => {\n      if (!viewerRef.current) {\n        viewerRef.current = new Autodesk.Viewing.GuiViewer3D(containerRef.current);\n        viewerRef.current.start();\n        viewerRef.current.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, onViewerCameraChange);\n        viewerRef.current.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, onViewerSelectionChange);\n      }\n      updateViewerState({});\n    }).catch(err => console.error(err));\n    return () => {\n      if (viewerRef.current) {\n        viewerRef.current.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, onViewerCameraChange);\n        viewerRef.current.removeEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, onViewerSelectionChange);\n        viewerRef.current.finish();\n        viewerRef.current = null;\n      }\n    };\n  }, [props.runtime]);\n  useEffect(() => {\n    updateViewerState({});\n  }, [props.urn, props.selectedIds]);\n  const updateViewerState = () => {\n    if (!memoizedViewer) return;\n    if (props.urn) {\n      Autodesk.Viewing.Document.load('urn:' + props.urn, doc => memoizedViewer.loadDocumentNode(doc, doc.getRoot().getDefaultGeometry()), (code, message, errors) => console.error(code, message, errors));\n    } else if (memoizedViewer.model) {\n      memoizedViewer.unloadModel(memoizedViewer.model);\n    }\n    const selectedIds = memoizedViewer.getSelection();\n    if (JSON.stringify(props.selectedIds || []) !== JSON.stringify(selectedIds)) {\n      memoizedViewer.select(props.selectedIds);\n    }\n  };\n  const onViewerCameraChange = () => {\n    if (props.onCameraChange) {\n      props.onCameraChange({\n        viewer: memoizedViewer,\n        camera: memoizedViewer.getCamera()\n      });\n    }\n  };\n  const onViewerSelectionChange = () => {\n    if (props.onSelectionChange) {\n      props.onSelectionChange({\n        viewer: memoizedViewer,\n        ids: memoizedViewer.getSelection()\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 10\n  }, this);\n};\n_s(Viewer, \"1gY13+7AsrMl66h65e6Z6WNII7Q=\");\n_c = Viewer;\nViewer.propTypes = {\n  runtime: PropTypes.object,\n  urn: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.number),\n  onCameraChange: PropTypes.func,\n  onSelectionChange: PropTypes.func\n};\nexport default Viewer;\nvar _c;\n$RefreshReg$(_c, \"Viewer\");","map":{"version":3,"names":["React","useEffect","useRef","useMemo","PropTypes","Autodesk","window","runtime","options","ready","initializeViewerRuntime","Promise","resolve","Viewing","Initializer","some","prop","reject","Viewer","props","containerRef","viewerRef","memoizedViewer","current","then","GuiViewer3D","start","addEventListener","CAMERA_CHANGE_EVENT","onViewerCameraChange","SELECTION_CHANGED_EVENT","onViewerSelectionChange","updateViewerState","catch","err","console","error","removeEventListener","finish","urn","selectedIds","Document","load","doc","loadDocumentNode","getRoot","getDefaultGeometry","code","message","errors","model","unloadModel","getSelection","JSON","stringify","select","onCameraChange","viewer","camera","getCamera","onSelectionChange","ids","propTypes","object","string","arrayOf","number","func"],"sources":["/Users/kaseyknudsen/Desktop/APS/aps-viewer-react-desktop/aps-viewer-react/src/components/Viewer.jsx"],"sourcesContent":["/// import * as Autodesk from \"@types/forge-viewer\";\n\nimport React, { useEffect, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst { Autodesk } = window;\n\nconst runtime = {\n  options: null,\n  ready: null,\n};\n\nfunction initializeViewerRuntime(options) {\n  if (!runtime.ready) {\n    runtime.options = { ...options };\n    runtime.ready = new Promise((resolve) => Autodesk.Viewing.Initializer(runtime.options, resolve));\n  } else {\n    if (['accessToken', 'getAccessToken', 'env', 'api', 'language'].some((prop) => options[prop] !== runtime.options[prop])) {\n      return Promise.reject('Cannot initialize another viewer runtime with different settings.');\n    }\n  }\n  return runtime.ready;\n}\n\nconst Viewer = (props) => {\n  const containerRef = useRef(null);\n  const viewerRef = useRef(null);\n\n  // Memoize the viewer instance to prevent unnecessary re-creation\n  const memoizedViewer = useMemo(() => viewerRef.current, [viewerRef.current]);\n\n  useEffect(() => {\n    initializeViewerRuntime(props.runtime || {})\n      .then(() => {\n        if (!viewerRef.current) {\n          viewerRef.current = new Autodesk.Viewing.GuiViewer3D(containerRef.current);\n          viewerRef.current.start();\n          viewerRef.current.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, onViewerCameraChange);\n          viewerRef.current.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, onViewerSelectionChange);\n        }\n        updateViewerState({});\n      })\n      .catch((err) => console.error(err));\n\n    return () => {\n      if (viewerRef.current) {\n        viewerRef.current.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, onViewerCameraChange);\n        viewerRef.current.removeEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, onViewerSelectionChange);\n        viewerRef.current.finish();\n        viewerRef.current = null;\n      }\n    };\n  }, [props.runtime]);\n\n  useEffect(() => {\n    updateViewerState({});\n  }, [props.urn, props.selectedIds]);\n\n  const updateViewerState = () => {\n    if (!memoizedViewer) return;\n\n    if (props.urn) {\n      Autodesk.Viewing.Document.load(\n        'urn:' + props.urn,\n        (doc) => memoizedViewer.loadDocumentNode(doc, doc.getRoot().getDefaultGeometry()),\n        (code, message, errors) => console.error(code, message, errors)\n      );\n    } else if (memoizedViewer.model) {\n      memoizedViewer.unloadModel(memoizedViewer.model);\n    }\n\n    const selectedIds = memoizedViewer.getSelection();\n    if (JSON.stringify(props.selectedIds || []) !== JSON.stringify(selectedIds)) {\n      memoizedViewer.select(props.selectedIds);\n    }\n  };\n\n  const onViewerCameraChange = () => {\n    if (props.onCameraChange) {\n      props.onCameraChange({ viewer: memoizedViewer, camera: memoizedViewer.getCamera() });\n    }\n  };\n\n  const onViewerSelectionChange = () => {\n    if (props.onSelectionChange) {\n      props.onSelectionChange({ viewer: memoizedViewer, ids: memoizedViewer.getSelection() });\n    }\n  };\n\n  return <div ref={containerRef}></div>;\n};\n\nViewer.propTypes = {\n  runtime: PropTypes.object,\n  urn: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.number),\n  onCameraChange: PropTypes.func,\n  onSelectionChange: PropTypes.func,\n};\n\nexport default Viewer;\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}